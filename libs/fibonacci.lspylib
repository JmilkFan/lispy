; 空类型
(def {nil} {})

; 布尔类型
(def {true} 1)
(def {false} 0)

; 函数定义 Lambda 表达式
(def {fun} (\ {f b} {
  def (head f) (\ (tail f) b)
}))

; 取列表中的第一、二、三项
(fun {fst l} { eval (head l) })
(fun {snd l} { eval (head (tail l)) })
(fun {trd l} { eval (head (tail (tail l))) })

; Unpack List for Function
(fun {unpack f l} {
  eval (join (list f) l)
})
; Pack List for Function
(fun {pack f & xs} {f xs})

; switch 关键字
(fun {switch & cs} {
  if (== cs nil)
    {error "No Selection Found"}
    {if (fst (fst cs)) {snd (fst cs)} {unpack switch (tail cs)}}
})

; default 关键字
(def {default} true)


; Fibonacci
(fun {fib n} {
  switch
    { (== n 0) 0 }
    { (== n 1) 1 }
    { default (+ (fib (- n 1)) (fib (- n 2))) }
})